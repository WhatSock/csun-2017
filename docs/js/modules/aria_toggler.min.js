/*
Toggle Generator R2.3
Copyright 2010-2017 Bryan Garaventa (WhatSock.com)
Part of AccDC, a Cross-Browser JavaScript accessibility API, distributed under the terms of the Open Source Initiative OSI - MIT License

To avoid backwards compatible screen reader support issues, ARIA Toggle and ARIA Checkbox Rules :
IMG : Use aria-label to set screen reader text.
INPUT : Use both aria-label and Title to set screen reader text.
All tags that support innerHTML: Use innerText (whether offscreen or visible) to set screen reader text.
Image links (A tag with embedded IMG): Use innerText and add alt="" to the IMG tag to set screen reader text. (This is required for iOS support using Voiceover)
	*/
(function(){$A.Toggle=function(a,b){var b=b||{},i=typeof a==="string"?$A.getEl(a):a,f=this,g=$A.getAttr(i,"role"),c=(g=="checkbox"||g=="switch")?true:false,d=$A.createEl("span",null,$A.sraCSS);if(!b.noToggle&&b.noARIA){if(!b.roleText){b.roleText="Toggle"}if(!b.stateText){b.stateText="Pressed"}i.appendChild(d)}var e=function(k){var j=true;if(b.callback&&typeof b.callback==="function"){j=b.callback.apply(i,[k])}if(j){if(!b.noToggle&&b.noARIA){d.innerHTML=k?("&nbsp;"+b.roleText+"&nbsp;"+b.stateText):"&nbsp;"+b.roleText}else{if(!b.noToggle){$A.setAttr(i,c?"aria-checked":"aria-pressed",k?"true":"false")}}f.state=k}};var h=i.nodeName.toLowerCase();if(!((h=="input"&&($A.getAttr(i,"type")=="button"||$A.getAttr(i,"type")=="image"))||(h=="a"&&$A.getAttr(i,"href"))||(h=="button"))){$A.setAttr(i,"tabindex","0")}$A.unbind(i,"click keydown");$A.bind(i,{keydown:function(l){var j=l.which||l.keyCode;if(j==13||j==32){l.preventDefault();l.stopPropagation();if(!(i.nodeName.toLowerCase()=="input"&&i.type=="image"&&j==32)){$A.trigger(i,"click")}}},click:function(j){e.apply(i,[f.state?false:true])?true:false;j.preventDefault()}});f.set=function(j){e.apply(i,[j])};if(!b.noToggle){e.apply(i,[b.state?true:false])}}})();